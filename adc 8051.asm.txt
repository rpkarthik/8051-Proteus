;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Tue Jun 4 2024
; Processor: AT89C51
; Compiler:  ASEM-51 (Proteus)
;====================================================================

$NOMOD51
$INCLUDE (8051.MCU)

;====================================================================
; DEFINITIONS
;====================================================================

;====================================================================
; VARIABLES
;====================================================================

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

      ; Reset Vector
      org   0000h
      jmp   Start

;====================================================================
; CODE SEGMENT
;====================================================================

org   0100h
Start:
      MOV P0,#000H	; Make port 0 as output   - for LCD Control port
      MOV P1,#0FFH	; Makes port 1 input port - read data from ADC 0808 
      MOV P2,#000H	; Make port 2 as output   - to control ADC 0808 
      MOV P3,#000H	; Make port 3 as output   - for LCD Data port 

      ACALL LCDINT
      ACALL ADC
      MOV A,#041h
      ACALL DISDATA
      MOV A,#044h
      ACALL DISDATA
      MOV A,#043h
      ACALL DISDATA
      SJMP HH
      
      
LCDINT:MOV A,#038H	; LCD ON 5x7 Matric 2lines
      ACALL CMND	; CMD mode call
      MOV A, #0FH	; Cursor ON & cursor blink
      ACALL CMND 	; CMD mode call
      MOV A, #06H	; Auto Increment cursor
      ACALL CMND 	; CMD mode call
      MOV A, #01H	; LCD clear screen & Set cursor on 0,0 position 
      ACALL CMND 	; CMD mode call
      RET		; return to the called function

      
CMND: MOV  P3,A		; send cmd to data port
      CLR  P0.0		; RS pin LOW for CMD mode
      CLR  P0.1		; RW pin LOW for write mode
      SETB P0.2		; E pin HIGH to LOW data processing
      ACALL DELAY	; delay to ensure data processing 
      CLR  P0.2		; 
      RET		; return to the called function

      
DISDATA:MOV P3,A	; send display data to data port
      SETB  P0.0	; RS pin HIGH for data mode
      CLR   P0.1	; RW pin LOW for write mode
      SETB  P0.2	; E pin HIGH to LOW for data processing
      ACALL DELAY	; delay to ensure data processing 
      CLR   P0.2	;
      RET		; return to the called function

ADC:  SETB P2.7		; Makes EOC pin high- 1
      CLR P2.4 		; Clears ALE pin     -2
      CLR P2.6 		; Clears Start pin   -2
      CLR P2.5 		; Clears OE pin      -2

BACK: CLR P2.2 		; Clears ADD C       -3
      SETB P2.1		; Sets ADD B         -3
      CLR P2.0 		; Clears ADD A       -3(this selects the second address line)

      ACALL DELAY
      SETB P2.4 	; Sets ALE high      -3.1 
      ACALL DELAY

      SETB P2.6 	; cmd2start conr.     -4
      ACALL DELAY
      CLR P2.4  	; makes ALE low
      CLR P2.6  	; makes Start pin low-4

HERE: JB  P2.7,HERE  	; waits for low pulse at EOC         -5
HERE1:JNB P2.7,HERE1	; waits for low pulse to finish      -5.1

      SETB P2.5 	; enables OE pin to extract data from ADC   -6
      ACALL DELAY
      MOV A,P1  	; moves acquired data to accumulator       -6.1
      CLR P2.5  	; clears OE                                -6.2
      MOV R7,A 		; COPY result data to R7 Reg for future use
      ACALL DELAY
      ;SJMP BACK	; repeatedly gets data from ADC
      RET		; return to the called function

      
DELAY:MOV R3,#0FFH;50
HERE2:MOV R4,#0FFH
HERE3:DJNZ R4,HERE3
      DJNZ R3,HERE2
      RET


;====================================================================
      END
